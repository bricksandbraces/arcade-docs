import{j as o}from"./jsx-runtime-D_zvdyIk.js";import{j as a,P as m}from"./index.esm-Dy8HIj2c.js";import"./index-D4lIrffr.js";import"./index-BQQLSK9g.js";import"./index-DsJinFGm.js";const y={title:"Components/StateIndicator",component:a,decorators:[t=>o.jsx("div",{className:"p-xlg",children:o.jsx(t,{})})]},e=t=>o.jsx(a,{...t});e.args={state:"Online"};e.argTypes={state:{description:"The state of the indicator",control:{type:"select"},options:["Online","Offline","Busy","Pending","Notification"],defaultValue:"Online"}};const r=()=>o.jsx("div",{className:"gap-xlg flex flex-row",children:m.map(t=>o.jsx(a,{state:t},t))});e.__docgenInfo={description:"",methods:[],displayName:"Playground"};r.__docgenInfo={description:"",methods:[],displayName:"Overview"};e.__docgenInfo={description:"",methods:[],displayName:"Playground"};r.__docgenInfo={description:"",methods:[],displayName:"Overview"};var s,n,i;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`(args: React.ComponentProps<typeof StateIndicator>) => {
  return <StateIndicator {...args} />;
}`,...(i=(n=e.parameters)==null?void 0:n.docs)==null?void 0:i.source}}};var d,c,p;r.parameters={...r.parameters,docs:{...(d=r.parameters)==null?void 0:d.docs,source:{originalSource:`() => {
  return <div className="gap-xlg flex flex-row">
      {State.map(state => <StateIndicator key={state} state={state} />)}
    </div>;
}`,...(p=(c=r.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const v=["Playground","Overview"];export{r as Overview,e as Playground,v as __namedExportsOrder,y as default};
